# Kitty theme
# Add the theme at the top, any setting below the theme will be overriden
# include ~/github/dotfiles-latest/kitty/themes/themes/ChallengerDeep.conf
# include ~/github/dotfiles-latest/kitty/themes/themes/Catppuccin-Mocha.conf
# include ~/github/dotfiles-latest/kitty/themes/themes/Linkarzu.conf
include ~/github/dotfiles-latest/kitty/active-theme.conf

#: The value of the TERM environment variable to set. Changing this
#: can break many terminal programs, only change it if you know what
#: you are doing, not because you read some advice on "Stack Overflow"
#: to change it. The TERM variable is used by various programs to get
#: information about the capabilities and behavior of the terminal. If
#: you change it, depending on what programs you run, and how
#: different the terminal you are changing it to is, various things
#: from key-presses, to colors, to various advanced features may not
#: work. Changing this option by reloading the config will only affect
#: newly created windows.
# 
# xterm-kitty is the default, but I'm hardcoding it just in case
term xterm-kitty

font_size 13

# Make sure you have the fonts installed
# This is the only way I could make jetbrains mono work, using the "Mono" word
# at the very end
font_family      JetBrainsMono Nerd Font Mono
bold_font        JetBrainsMono Nerd Font Mono Extra Bold
bold_italic_font JetBrainsMono Nerd Font Mono Extra Bold Italic
# font_family MesloLGM Nerd Font
# font_family MesloLGS Nerd Font
# font_family MesloLGMDZ Nerd Font

# Kitty's font was more spaced compared to alacritty's, tried font variations
# but it didn't change, so I went with this, it works fine
modify_font cell_width 95%

# I was going crazy
# after a kitty update, font height seemed smaller, this fixed it
modify_font cell_height 5px

scrollback_lines 10000

# The following command checks if tmux is installed.
# If tmux is installed, it automatically attaches to an existing tmux session.
# If no tmux session exists, a new one is created.
# If tmux is not installed, it simply starts zsh without tmux.
#
# For this to work properly, you need to make sure that your shell is configured
# for homebrew, so you should have this line:
# eval "$(/opt/homebrew/bin/brew shellenv)"
# In your ~/.zprofile file
# If you don't have that line, or if the file doesn't exist, run this:
# echo '' >>~/.zprofile && echo '# Configure shell for brew' >>~/.zprofile && echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >>~/.zprofile && eval "$(/opt/homebrew/bin/brew shellenv)"
#
# This assumes you installed tmux through brew if using macos
# shell zsh --login -c "if command -v tmux >/dev/null 2>&1; then tmux attach || tmux; else zsh; fi"

# Old version of above command:
# The 2 commands after login are needed to automatically attach to an existing 
# tmux session, if no session exists, a new one is created
# shell zsh --login -c "tmux attach || tmux"

# Open `sticky.md` in Vim using a custom vimrc file and preven any saved session files from loading.
# - I'm using a bash shell because if I load zsh, my zshrc file is too heavy
# -n      - disables swap files, directly opening the file.
# -u file - uses a custom vimrc.
# -U NONE - prevents loading session files, avoiding prior states or buffers.
# I do want a swap file, as I was losing my changes a lot because I didn't save, will enable auto save later on
# shell bash --login -c "vim -u ~/github/dotfiles-latest/vimrc/vimrc-file-sticky ~/github/dotfiles-latest/neovim/neobean-sticky/sticky.md"
# shell bash --login -c "~/github/dotfiles-latest/yabai/positions/kitty-pos.sh && NVIM_APPNAME=neobean-sticky nvim ~/github/dotfiles-latest/neovim/neobean-sticky/skitty-notes.md"
# shell bash --login -c "~/github/dotfiles-latest/yabai/positions/kitty-pos.sh && NVIM_APPNAME=neobean-sticky nvim \"$HOME/Library/Mobile Documents/com~apple~CloudDocs/github/macos-setup/mac/skitty/skitty-notes.md\""
# shell bash --login -c "~/github/dotfiles-latest/yabai/positions/kitty-pos.sh && NVIM_APPNAME=neobean-sticky nvim \"$HOME/Library/Mobile Documents/com~apple~CloudDocs/github/skitty/skitty-notes.md\""

# # Set the NEOVIM_MODE environment variable when calling neovim, this variable
# # will be accessible within the neovim session
# # NOTE:I'm prepending /opt/homebrew/bin to the PATH, so all the needed binaries (e.g., bash, nvim) are found
shell bash --login -c "export PATH=\"/opt/homebrew/bin:$PATH\" && export NEOVIM_MODE=skitty && ~/github/dotfiles-latest/yabai/positions/kitty-pos.sh && NVIM_APPNAME=neobean nvim \"$HOME/Library/Mobile Documents/com~apple~CloudDocs/github/skitty/skitty-notes.md\""


# When you do fn+ctrl+shift+2 it opens the kitty file in the editor below
editor nvim

# These colors match what I have in my alacritty theme
# Commenting them as they're set by the theme on the top
# foreground #CDD6F4
# background #1E1E2E

# Make kitty borderless
# "yes" disables round corners and hides the title bar 
# "titlebar-only" leaves round corners but hides title bar
# hide_window_decorations yes
hide_window_decorations titlebar-only
# hide_window_decorations titlebar-and-corners

#: The window padding (in pts) (blank area between the text and the
#: window border). A single value sets all four sides. Two values set
#: the vertical and horizontal sides. Three values set top, horizontal
#: and bottom. Four values set top, right, bottom and left.
# window_padding_width 5 5 0 0
# window_padding_width 1 4 1 4
window_padding_width 0

# I'm adding these below the theme in case the theme sets them
cursor #ebfafa
cursor_text_color #0D1116

#: Ask for confirmation when closing an OS window or a tab with at
#: least this number of kitty windows in it by window manager (e.g.
#: clicking the window close button or pressing the operating system
#: shortcut to close windows) or by the close_tab action. A value of
#: zero disables confirmation. This confirmation also applies to
#: requests to quit the entire application (all OS windows, via the
#: quit action). Negative values are converted to positive ones,
#: however, with shell_integration enabled, using negative values
#: means windows sitting at a shell prompt are not counted, only
#: windows where some command is currently running. Note that if you
#: want confirmation when closing individual windows, you can map the
#: close_window_with_confirmation action.
confirm_os_window_close 0

#: The audio bell. Useful to disable it in environments that require
#: silence.
enable_audio_bell no

#: Use the Option key as an Alt key on macOS. With this set to no,
#: kitty will use the macOS native Option+Key to enter Unicode
#: character behavior. This will break any Alt+Key keyboard shortcuts
#: in your terminal programs, but you can use the macOS Unicode input
#: technique. You can use the values: left, right or both to use only
#: the left, right or both Option keys as Alt, instead. Note that
#: kitty itself always treats Option the same as Alt. This means you
#: cannot use this option to configure different kitty shortcuts for
#: Option+Key vs. Alt+Key. Also, any kitty shortcuts using
#: Option/Alt+Key will take priority, so that any such key presses
#: will not be passed to terminal programs running inside kitty.
#: Changing this option by reloading the config is not supported.
macos_option_as_alt right
